name: build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # node_modules 폴더를 캐싱합니다.
      # 이게 없으면 workflow를 실행할 때 마다 node_modules를 다시 생성합니다.
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          # 캐싱할 폴더를 지정합니다.
          path: "**/node_modules"
          # package-lock.json 파일의 변경이 발생했을 경우 새로 캐싱될 수 있도록 해줍니다.
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          # cache hit이 발생하지 않았을 경우, restore-keys 에 있는 것을 꺼냅니다.
          # 단, npm install 명령은 실행됩니다. 기존의 node_modules 캐시를 기반으로
          # 추가된 패키지만 설치할테니, 아예 처음부터 node_modules 폴더를 생성하는 것보다
          # 시간이 적게 걸릴 겁니다.
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: set .env
        run: |
          echo "REACT_APP_KAKAO_KEY=${{secrets.REACT_APP_KAKAO_KEY}}" >> .env
          echo "REACT_APP_URL=${{secrets.REACT_APP_URL}}" >> .env

      - name: Build project
        run: |
          npm run build

      # 빌드된 파일들(./build)을 gh-pages 브랜치로 배포합니다.
      - uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
